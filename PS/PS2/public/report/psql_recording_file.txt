# 7)
mrteera=# create database investment;
CREATE DATABASE

mrteera=# \c investment
You are now connected to database "investment" as user "mrteera".

investment=# create table my_stocks (
investment(# symbol varchar(20) not null,
investment(# n_shares integer not null,
investment(# date_acquired date not null
investment(# );
CREATE TABLE

investment=# \d my_stocks
             Table "public.my_stocks"
    Column     |         Type          | Modifiers 
---------------+-----------------------+-----------
 symbol        | character varying(20) | not null
 n_shares      | integer               | not null
 date_acquired | date                  | not null

investment=# copy my_stocks from '/Users/mrteera/Workspace/web16-06/PS/PS2/public/report/my_stock.txt' (delimiter E'\t');
COPY 5

# https://www.postgresql.org/docs/current/static/sql-copy.html
# http://stackoverflow.com/a/6113351/1971997

# -----------------------------------------------------------------------------
# 8)
investment=# select * from my_stocks;
 symbol | n_shares | date_acquired 
--------+----------+---------------
 ADVANC |      100 | 2016-08-31
 KBANK  |      100 | 2016-08-31
 SCB    |      100 | 2016-08-31
 BTS    |      100 | 2016-08-31
 BANPU  |      100 | 2016-08-31
(5 rows)

investment=# create table stock_prices as select symbol, current_date as quote_date, 31.415 as price from my_stocks;
SELECT 5

investment=# \d stock_prices
          Table "public.stock_prices"
   Column   |         Type          | Modifiers 
------------+-----------------------+-----------
 symbol     | character varying(20) | 
 quote_date | date                  | 
 price      | numeric               | 

investment=# select * from stock_prices;
 symbol | quote_date | price  
--------+------------+--------
 ADVANC | 2016-09-04 | 31.415
 KBANK  | 2016-09-04 | 31.415
 SCB    | 2016-09-04 | 31.415
 BTS    | 2016-09-04 | 31.415
 BANPU  | 2016-09-04 | 31.415
(5 rows)

investment=# create table newly_acquired_stocks (
investment(# symbol varchar(20) not null,
investment(# n_shares integer not null,
investment(# date_acquired date not null
investment(# );
CREATE TABLE

investment=# \d newly_acquired_stocks
       Table "public.newly_acquired_stocks"
    Column     |         Type          | Modifiers 
---------------+-----------------------+-----------
 symbol        | character varying(20) | not null
 n_shares      | integer               | not null
 date_acquired | date                  | not null

investment=# insert into newly_acquired_stocks select * from my_stocks where n_shares > 0 offset 2;
INSERT 0 3

investment=# select * from newly_acquired_stocks;
 symbol | n_shares | date_acquired 
--------+----------+---------------
 SCB    |      100 | 2016-08-31
 BTS    |      100 | 2016-08-31
 BANPU  |      100 | 2016-08-31
(3 rows)

# https://www.postgresql.org/docs/current/static/sql-createtableas.html
# https://www.postgresql.org/docs/current/static/functions-datetime.html
# https://www.postgresql.org/docs/9.5/static/functions-comparison.html
# https://www.postgresql.org/docs/current/static/sql-insert.html

# -----------------------------------------------------------------------------
# 9)

investment=# select my_stocks.symbol, n_shares as number_of_shares, price as price_per_share, n_shares * price as current_value from my_stocks join stock_prices on my_stocks.symbol = stock_prices.symbol;
 symbol | number_of_shares | price_per_share | current_value 
--------+------------------+-----------------+---------------
 ADVANC |              100 |          31.415 |      3141.500
 KBANK  |              100 |          31.415 |      3141.500
 SCB    |              100 |          31.415 |      3141.500
 BTS    |              100 |          31.415 |      3141.500
 BANPU  |              100 |          31.415 |      3141.500
(5 rows)

# Credit: Reshma

# -----------------------------------------------------------------------------
# 10)
investment=# insert into my_stocks values ('AAPL', 10, current_date);
INSERT 0 1

investment=# select my_stocks.symbol, n_shares as number_of_shares, price as price_per_share, n_shares * price as current_value from my_stocks join stock_prices on my_stocks.symbol = stock_prices.symbol;
 symbol | number_of_shares | price_per_share | current_value 
--------+------------------+-----------------+---------------
 ADVANC |              100 |          31.415 |      3141.500
 KBANK  |              100 |          31.415 |      3141.500
 SCB    |              100 |          31.415 |      3141.500
 BTS    |              100 |          31.415 |      3141.500
 BANPU  |              100 |          31.415 |      3141.500
(5 rows)

investment=# select my_stocks.symbol, n_shares as number_of_shares, price as price_per_share, n_shares * price as current_value from my_stocks full outer join stock_prices on my_stocks.symbol = stock_prices.symbol;
 symbol | number_of_shares | price_per_share | current_value 
--------+------------------+-----------------+---------------
 ADVANC |              100 |          31.415 |      3141.500
 KBANK  |              100 |          31.415 |      3141.500
 SCB    |              100 |          31.415 |      3141.500
 BTS    |              100 |          31.415 |      3141.500
 BANPU  |              100 |          31.415 |      3141.500
 AAPL   |               10 |                 |              
(6 rows)

# -----------------------------------------------------------------------------
# 11)

investment=# create or replace function stock_value( symbol varchar ) returns integer as $$declare  stock_value integer := 0;  symbol_length integer;  count integer := 0;  stock_char char(1);begin  symbol_length := length(symbol);  while (count < symbol_length)  loop    count := count + 1;    stock_char := substr(symbol, count, 1);     stock_value := stock_value + ascii(stock_char);   end loop;  return stock_value;end;$$ language plpgsql;
CREATE FUNCTION

investment=# select stock_value('IBM');
 stock_value 
-------------
         216
(1 row)

investment=# update stock_prices set price = stock_value(symbol);
UPDATE 5
investment=# select * from stock_prices;
 symbol | quote_date | price 
--------+------------+-------
 ADVANC | 2016-09-04 |   429
 KBANK  | 2016-09-04 |   359
 SCB    | 2016-09-04 |   216
 BTS    | 2016-09-04 |   233
 BANPU  | 2016-09-04 |   374
(5 rows)

investment=# create or replace function portfolio_value()returns real as $$declare  aggregate_value real := 0;  cur_row RECORD;  curs CURSOR FOR select my_stocks.symbol, n_shares as number_of_shares, price as price_per_share, n_shares * price as current_value from my_stocks join stock_prices on my_stocks.symbol = stock_prices.symbol;begin  OPEN curs;  LOOP    FETCH curs INTO cur_row;    exit when not found;    aggregate_value := aggregate_value + cur_row.current_value;  END LOOP;  return aggregate_value;end;$$ language plpgsql;
CREATE FUNCTION

investment=# select portfolio_value();                                                                                                                                             portfolio_value 
-----------------
          161100
(1 row)

# -----------------------------------------------------------------------------
# 10)
investment=# select * from stock_prices;
 symbol | quote_date | price 
--------+------------+-------
 ADVANC | 2016-09-04 |   429
 KBANK  | 2016-09-04 |   359
 SCB    | 2016-09-04 |   216
 BTS    | 2016-09-04 |   233
 BANPU  | 2016-09-04 |   374
(5 rows)

investment=# select avg(price) from stock_prices;
         avg          
----------------------
 322.2000000000000000
(1 row)

investment=# insert into my_stocks (symbol, n_shares, date_acquired) select my_stocks.symbol, n_shares, current_date from stock_prices join my_stocks on my_stocks.symbol = stock_prices.symbol where price > (select avg(price) from stock_prices);
INSERT 0 3

investment=# select * from my_stocks;
 symbol | n_shares | date_acquired 
--------+----------+---------------
 ADVANC |      100 | 2016-08-31
 KBANK  |      100 | 2016-08-31
 SCB    |      100 | 2016-08-31
 BTS    |      100 | 2016-08-31
 BANPU  |      100 | 2016-08-31
 AAPL   |       10 | 2016-09-04
 ADVANC |      100 | 2016-09-04
 KBANK  |      100 | 2016-09-04
 BANPU  |      100 | 2016-09-04

investment=# select symbol, sum(n_shares) from my_stocks group by symbol;
 symbol | sum 
--------+-----
 AAPL   |  10
 KBANK  | 200
 BANPU  | 200
 SCB    | 100
 BTS    | 100
 ADVANC | 200
(6 rows)

investment=# select my_stocks.symbol, sum(n_shares) * price as total_value from my_stocks join stock_prices on my_stocks.symbol = stock_prices.symbol  group by my_stocks.symbol, price;
 symbol | total_value 
--------+-------------
 SCB    |       21600
 KBANK  |       71800
 BANPU  |       74800
 BTS    |       23300
 ADVANC |       85800
(5 rows)

investment=# select my_stocks.symbol, sum(n_shares), sum(n_shares) * price as total_value from my_stocks join stock_prices on my_stocks.symbol = stock_prices.symbol  group by my_stocks.symbol, price having price > (select avg(price) from stock_prices);
 symbol | sum | total_value 
--------+-----+-------------
 KBANK  | 200 |       71800
 ADVANC | 200 |       85800
 BANPU  | 200 |       74800
(3 rows)

# -----------------------------------------------------------------------------
# 13)
investment=# create view stocks_i_like as select my_stocks.symbol, sum(n_shares), sum(n_shares) * price as total_value from my_stocks join stock_prices on my_stocks.symbol = stock_prices.symbol  group by my_stocks.symbol, price having price > (select avg(price) from stock_prices);
CREATE VIEW
investment=# select * from stocks_i_like;
 symbol | sum | total_value 
--------+-----+-------------
 KBANK  | 200 |       71800
 ADVANC | 200 |       85800
 BANPU  | 200 |       74800
(3 rows)

# https://www.postgresql.org/docs/current/static/tutorial-views.html
